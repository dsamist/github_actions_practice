##give your workflow a unique name.
name: Build and Push Docker Image
##define the actions that need to be done in the branch for this workflows to be triggered. In this case, a pull request to the main will trigger the actions for this workflow.
on:
  pull_request
    types:
    - synchronize
  pull_request_review:
    types:
    - submitted

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --use
          docker build --platform linux/amd64,linux/arm64 -t dsamist/pipeline_images:latest -f Dockerfile .
      
      - name: Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx use default
<<<<<<< HEAD
          docker push dsamist/pipeline_images:latest
=======
          docker push dsamist/pipeline_images:latest
>>>>>>> 410b9a32336062c22958e99f79aabc2b4824e7de
